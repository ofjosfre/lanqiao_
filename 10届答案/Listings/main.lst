C51 COMPILER V9.54   MAIN                                                                  02/22/2022 10:50:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*******************************************************************************  
   2          * 文件名称：通过计数器0和定时器1采集NF555生成的脉冲频率实验
   3          * 实验配置：J13跳线配置为IO方式，J5配置为BTN、J3配置为SIGNAL-P34（可拔下J2的任一跳线帽即可）
   4          * 实验现象：通过计数器0和定时器1采集NF555生成的脉冲频率
   5          * 硬件环境：IAP15F2K61S2单片机，单片机内部振荡器频率：12M
   6          * 注意事项：要用到_nop_()必须要包含intrins.h头文件
   7          *******************************************************************************/
   8          #include "stc15.h"
   9          #include "iic.h"
  10          unsigned char code SMG_duanma[19]=
  11          {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,
  12               0x80,0x90,0x88,0x80,0xc6,0xc0,0x86,0x8e,0xbf,0x7f,0xc1   //U
  13          };
  14          sbit HC138_A = P2^5;
  15          sbit HC138_B = P2^6;
  16          sbit HC138_C = P2^7;
  17          sbit S7 = P3^0;
  18          sbit S6 = P3^1;
  19          sbit S5 = P3^2;
  20          sbit S4 = P3^3;
  21          sbit LED1 = P0^0;
  22          sbit LED2 = P0^1;
  23          sbit LED3 = P0^2;
  24          sbit LED4 = P0^3;
  25          sbit LED5 = P0^4;
  26          unsigned char display_flag;//界面切换标志位
  27          unsigned char xianshi_flag;//数码管是否显示标志位
  28          unsigned char ledgongneng_flag;
  29          unsigned char LED1_FLAG,LED2_FLAG,LED3_FLAG,LED4_FLAG,LED5_FLAG;
  30          unsigned char pout_flag;
  31          unsigned char count_t = 0;
  32          unsigned int count_f = 0;
  33          unsigned int dat_f = 0;
  34          void Key_Scan();
  35          unsigned char Read_AIN3();
  36          void pout_dianya_control();
  37          unsigned int AIN3_Int;
  38          void display_fre();
  39          void display_AIN3();
  40          void display_AIN3_FRE();
  41          void control_LED34();
  42          void control_LEDALL();
  43          void Put_DA(unsigned char temp);
  44          void HC138_Select(unsigned char i);
  45          void Display_SEG_Bit(unsigned char pos,unsigned char value);
  46          void DelaySMG(unsigned int times);
  47          void Delay_K(unsigned char times);
  48          void initTimer();
  49          void Key_Scan();
  50          void main()
  51          {
  52   1          HC138_Select(4);
  53   1          P0=0X00;
  54   1          HC138_Select(1);
C51 COMPILER V9.54   MAIN                                                                  02/22/2022 10:50:23 PAGE 2   

  55   1          P0=0XFF;
  56   1          initTimer();
  57   1          while(1)
  58   1          {
  59   2            AIN3_Int = (unsigned int)((Read_AIN3()*5.0/255)*100);
  60   2            pout_dianya_control();
  61   2            Key_Scan();
  62   2            control_LED34();
  63   2            control_LEDALL();
  64   2            display_AIN3_FRE();
  65   2          }
  66   1      }
  67          void control_LEDALL()
  68          {
  69   1        if(ledgongneng_flag==0)
  70   1        {
  71   2        if(LED1_FLAG==0)
  72   2        {
  73   3          HC138_Select(1);
  74   3          LED1=1;
  75   3        }
  76   2        else
  77   2        {
  78   3          HC138_Select(1);
  79   3          LED1=0;
  80   3        }
  81   2        
  82   2        
  83   2        
  84   2          if(LED2_FLAG==0)
  85   2        {
  86   3          HC138_Select(1);
  87   3          LED2=1;
  88   3        }
  89   2        else
  90   2        {
  91   3          HC138_Select(1);
  92   3          LED2=0;
  93   3        }
  94   2        
  95   2          if(LED3_FLAG==0)
  96   2        {
  97   3          HC138_Select(1);
  98   3          LED3=1;
  99   3        }
 100   2        else
 101   2        {
 102   3          HC138_Select(1);
 103   3          LED3=0;
 104   3        }
 105   2        
 106   2        
 107   2          if(LED4_FLAG==0)
 108   2        {
 109   3          HC138_Select(1);
 110   3          LED4=1;
 111   3        }
 112   2        else
 113   2        {
 114   3          HC138_Select(1);
 115   3          LED4=0;
 116   3        }
C51 COMPILER V9.54   MAIN                                                                  02/22/2022 10:50:23 PAGE 3   

 117   2        
 118   2        
 119   2          if(LED5_FLAG==0)
 120   2        {
 121   3          HC138_Select(1);
 122   3          LED5=1;
 123   3        }
 124   2        else
 125   2        {
 126   3          HC138_Select(1);
 127   3          LED5=0;
 128   3        }
 129   2        }
 130   1        
 131   1        else
 132   1        {
 133   2          HC138_Select(1);
 134   2          LED1=1;
 135   2          LED2=1;
 136   2          LED3=1;
 137   2          LED4=1;
 138   2          LED5=1;
 139   2        }
 140   1        
 141   1        
 142   1      }
 143          void Display_SEG_Bit(unsigned char pos,unsigned char value)
 144          {
 145   1        HC138_Select(3);//位选
 146   1        P0 = 0x00;
 147   1        P0 = 0x01<<(pos-1);
 148   1        HC138_Select(2);//段选
 149   1        P0 = 0xff;
 150   1        P0 = SMG_duanma[value];
 151   1        DelaySMG(1);
 152   1        P0 = 0xff;
 153   1      }
 154          void HC138_Select(unsigned char i)
 155          {
 156   1        switch(i)
 157   1        {
 158   2          case 1://LED
 159   2              HC138_A = 0;
 160   2              HC138_B = 0;
 161   2              HC138_C = 1;
 162   2              break;
 163   2          case 2://SEG
 164   2              HC138_A = 1;
 165   2              HC138_B = 1;
 166   2              HC138_C = 1;
 167   2              break;
 168   2          case 3://Bit
 169   2              HC138_A = 0;
 170   2              HC138_B = 1;
 171   2              HC138_C = 1;
 172   2              break;
 173   2          case 4://达林顿管阵列 取反门
 174   2              HC138_A = 1;
 175   2              HC138_B = 0;
 176   2              HC138_C = 1;
 177   2              break;
 178   2          default:break;
C51 COMPILER V9.54   MAIN                                                                  02/22/2022 10:50:23 PAGE 4   

 179   2        }
 180   1      }
 181          void control_LED34()
 182          {
 183   1        if(AIN3_Int<150)
 184   1        {
 185   2          LED3_FLAG = 0;
 186   2        }
 187   1        else if((AIN3_Int>=150)&&(AIN3_Int<250))
 188   1        {
 189   2          LED3_FLAG = 1;
 190   2        }
 191   1        else if((AIN3_Int>=250)&&(AIN3_Int<350))
 192   1        {
 193   2          LED3_FLAG = 0;
 194   2        }
 195   1        else
 196   1        {
 197   2          LED3_FLAG = 1;
 198   2        }
 199   1        
 200   1        if(dat_f<1000)
 201   1        {
 202   2          LED4_FLAG = 0;
 203   2        }
 204   1        else if((dat_f>=1000)&&(dat_f<5000))
 205   1        {
 206   2          LED4_FLAG = 1;
 207   2        }
 208   1        else if((dat_f>=5000)&&(dat_f<10000))
 209   1        {
 210   2          LED4_FLAG = 0;
 211   2        }
 212   1        else
 213   1        {
 214   2          LED4_FLAG = 1;
 215   2        }
 216   1      }
 217          void DelaySMG(unsigned int times)   //@12.000MHz
 218          {
 219   1        unsigned char i,j;
 220   1        unsigned int n;
 221   1        for(n = 0;n < times;n++)
 222   1        {
 223   2          i = 12;
 224   2          j = 50;
 225   2          do
 226   2          {
 227   3            while (--j);
 228   3          }
 229   2          while (--i);
 230   2        }
 231   1      
 232   1      }
 233          void initTimer()
 234          {
 235   1        TMOD = 0X04;
 236   1        TL0 = 0XFF;
 237   1        TH0 = 0XFF;
 238   1        TL1 = (65536-50000)%256;
 239   1        TH1 = (65536-50000)/256;
 240   1        EA = 1;
C51 COMPILER V9.54   MAIN                                                                  02/22/2022 10:50:23 PAGE 5   

 241   1        ET0 = 1;
 242   1        ET1 = 1;
 243   1        TR0 = 1;
 244   1        TR1 = 1;
 245   1      }
 246          void Timer0 () interrupt 1
 247          {
 248   1        count_f++;
 249   1      }
 250          void Timer1() interrupt 3
 251          {
 252   1        count_t++;
 253   1        if(count_t==20)
 254   1        {
 255   2          dat_f = count_f;
 256   2          count_t = 0;
 257   2          count_f = 0;
 258   2        }
 259   1      }
 260          void display_fre()
 261          {
 262   1          Display_SEG_Bit(1,15);
 263   1          if(dat_f>9999)
 264   1          {
 265   2            Display_SEG_Bit(4,dat_f/10000%10);
 266   2          }
 267   1          if(dat_f>999)
 268   1          {
 269   2            Display_SEG_Bit(5,dat_f/1000%10);
 270   2          }
 271   1          if(dat_f>99)
 272   1          {
 273   2            Display_SEG_Bit(6,dat_f/100%10);
 274   2          }
 275   1          if(dat_f>9)
 276   1          {
 277   2            Display_SEG_Bit(7,dat_f/10%10);
 278   2          }
 279   1          if(dat_f>0)
 280   1          {
 281   2            Display_SEG_Bit(8,dat_f%10);
 282   2          }
 283   1      
 284   1      }
 285          void display_AIN3_FRE()
 286          {
 287   1        if(xianshi_flag==0)
 288   1        {
 289   2          if(display_flag==0)
 290   2          {
 291   3            display_AIN3();
 292   3            LED1_FLAG = 1;
 293   3            LED2_FLAG = 0;
 294   3          }
 295   2          else
 296   2          {
 297   3            display_fre();
 298   3            LED1_FLAG = 0;
 299   3            LED2_FLAG = 1;
 300   3          }
 301   2        }
 302   1        else
C51 COMPILER V9.54   MAIN                                                                  02/22/2022 10:50:23 PAGE 6   

 303   1        {
 304   2          //关闭数码管
 305   2          HC138_Select(3);//位选
 306   2          P0 = 0x00;
 307   2          HC138_Select(2);//段选
 308   2          P0 = 0xff;
 309   2          DelaySMG(1);
 310   2        }
 311   1      }
 312          void display_AIN3()
 313          {
 314   1        Display_SEG_Bit(1,18);
 315   1        
 316   1        //Display_SEG_Bit(6,18);//小数点
 317   1        HC138_Select(3);//位选
 318   1        P0 = 0x00;
 319   1        P0 = 0x01<<(6-1);
 320   1        HC138_Select(2);//段选
 321   1        P0 = 0xff;
 322   1        P0 = SMG_duanma[AIN3_Int/100%10]&(~0x80);
 323   1        DelaySMG(1);
 324   1        
 325   1        Display_SEG_Bit(7,AIN3_Int/10%10);//小数点
 326   1        Display_SEG_Bit(8,AIN3_Int%10);//小数点
 327   1      }
 328          unsigned char Read_AIN3()
 329          {
 330   1        unsigned char temp = 0;
 331   1        IIC_Start();//IIC总线起始信号
 332   1        IIC_SendByte(0x90);//发送PCF8591的写操作地址
 333   1        IIC_WaitAck();//等待从机应答
 334   1        IIC_SendByte(0x03);//发送控制字节，选择模拟量输入模式(4路单端输入)和通道(通道3)。
 335   1        //IIC_SendByte(0x01);//发送控制字节，选择模拟量输入模式(4路单端输入)和通道(通道1)。
 336   1        IIC_WaitAck();//等待从机应答
 337   1        IIC_Stop();//IIC总线起始信号
 338   1        
 339   1        IIC_Start();
 340   1        IIC_SendByte(0x91);//发送PCF8591的读操作地址
 341   1        IIC_WaitAck();
 342   1        temp = IIC_RecByte();//读取PCF8591通道的数据 
 343   1        IIC_SendAck(1);//产生非应答信号
 344   1        IIC_Stop();
 345   1        return temp;
 346   1      }
 347          void Put_DA(unsigned char temp)
 348          {
 349   1        IIC_Start();//IIC总线起始信号
 350   1        IIC_SendByte(0x90);//发送PCF8591的写设备地址
 351   1        IIC_WaitAck();//等待从机应答
 352   1        IIC_SendByte(0x40);//发送控制字节，选择DA模式
 353   1        IIC_WaitAck();//等待从机应答
 354   1        IIC_SendByte(temp);//发送
 355   1        IIC_WaitAck();//等待从机应答
 356   1        IIC_Stop();//IIC总线起始信号
 357   1      }
 358          void Delay_K(unsigned char times)
 359          {
 360   1        while(times--)
 361   1        {
 362   2          display_AIN3_FRE();
 363   2        }
 364   1      }
C51 COMPILER V9.54   MAIN                                                                  02/22/2022 10:50:23 PAGE 7   

 365          void Key_Scan()
 366          {
 367   1        if(S4==0)
 368   1        {
 369   2          Delay_K(20);
 370   2          if(S4==0)
 371   2          {
 372   3            while(S4==0)
 373   3            {
 374   4              display_AIN3_FRE();
 375   4            }
 376   3            display_flag = !display_flag;
 377   3          }
 378   2        }
 379   1          if(S5==0)
 380   1        {
 381   2          Delay_K(20);
 382   2          if(S5==0)
 383   2          {
 384   3            while(S5==0)
 385   3            {
 386   4              display_AIN3_FRE();
 387   4            }
 388   3            pout_flag = !pout_flag;
 389   3          }
 390   2        }
 391   1        
 392   1          if(S7==0)
 393   1        {
 394   2          Delay_K(20);
 395   2          if(S7==0)
 396   2          {
 397   3            while(S7==0)
 398   3            {
 399   4              display_AIN3_FRE();
 400   4            }
 401   3            xianshi_flag = !xianshi_flag;
 402   3          }
 403   2        }
 404   1        
 405   1        
 406   1        if(S6==0)
 407   1        {
 408   2          Delay_K(20);
 409   2          if(S6==0)
 410   2          {
 411   3            while(S6==0)
 412   3            {
 413   4              display_AIN3_FRE();
 414   4            }
 415   3            ledgongneng_flag = !ledgongneng_flag;
 416   3          }
 417   2        }
 418   1      }
 419          void pout_dianya_control()
 420          {
 421   1        if(pout_flag==0)
 422   1        {
 423   2          Put_DA(2*51);
 424   2          LED5_FLAG = 0;
 425   2        }
 426   1        else
C51 COMPILER V9.54   MAIN                                                                  02/22/2022 10:50:23 PAGE 8   

 427   1        {
 428   2          Put_DA((AIN3_Int/100.0)*51);
 429   2          LED5_FLAG = 1;
 430   2        }
 431   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1090    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
